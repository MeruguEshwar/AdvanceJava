import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Scanner;

public class Support
{
public static void main(String[] args) {
	
	String url="jdbc:mysql://localhost:3306?user=root&password=12345";
	
	String query1="insert into advancejava.actbconnection values(?,?,?,?,?,?,?)";
	
	
	try {
		Connection connection=DriverManager.getConnection(url);
		
		PreparedStatement preparedStatement=connection.prepareStatement(query1);
		
		Scanner scanner=new Scanner(System.in);
		System.out.println("Enter the Customer Name: ");
		String ucname=scanner.next();
		preparedStatement.setString(1, ucname);
		
		System.out.println("Enter the Customer Email: ");
		String ucmail=scanner.next();
		preparedStatement.setString(2, ucmail);
		
		System.out.println("Enter the Mobile Number: ");
		String umnumber=scanner.next();
		preparedStatement.setString(3, umnumber);
		
		System.out.println("Select the Type Of Broadband:[pre/post] ");
		String ubband=scanner.next();
		preparedStatement.setString(4, ubband);
		
		System.out.println("Select the Type of Scheme Name:[Local/Std/FullTalkTime] ");
		String usname=scanner.next();
		preparedStatement.setString(5, usname);
		
		System.out.println("Provide the Connection Duration: ");
		int ucd=scanner.nextInt();
		preparedStatement.setInt(6, ucd);
		
		double totalRentalCost =monthlyCost(ubband,usname,ucd);
		
		preparedStatement.setDouble(7, totalRentalCost);
		
		preparedStatement.executeUpdate();
		System.out.println("The Total Monthly Rental Cost is: "+totalRentalCost);
		
		connection.close();
		
	}
	catch (SQLException e) {
		
		e.printStackTrace();
	}
}
public static double monthlyCost (String typeBroadband, String schemename,int duration )
{
	double totalcost=0.0;
	switch(typeBroadband)
	{
	case "pre" :
		switch (schemename) {
		case "Local" : 
		case "local" :	
			       totalcost=(duration * 200)+75;
		break;
		
		case "STD"  :
		case "std"  :	
			totalcost=(duration * 350)+75;
		break;
		
		case "FullTalkTime" :
		case "fulltalktime" :	
			totalcost=(duration * 500)+75;
		break;
		}
		
	case "post" :
		switch (schemename)
		{
		case "Local" :
		case "local" :	
			totalcost=(duration * 200)+150;
		break;
		
		case "Std" :
		case"std"  :
			totalcost=(duration * 350)+150;
		break;
		
		case "FullTalkTime" :
		case"fulltalktime"  :
			totalcost=(duration * 500)+150;
		break;
		}
	}
	return totalcost;
}
}